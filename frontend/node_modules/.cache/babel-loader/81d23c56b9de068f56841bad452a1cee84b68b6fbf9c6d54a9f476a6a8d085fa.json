{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johns\\\\OneDrive\\\\Desktop\\\\repello_ai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"Your response is coming\");\n  const loadingIntervalRef = useRef(null);\n  useEffect(() => {\n    if (loading) {\n      let dots = 0;\n      loadingIntervalRef.current = setInterval(() => {\n        dots = (dots + 1) % 4; // cycles 0..3 dots\n        setLoadingMessage(\"Your response is coming\" + \".\".repeat(dots));\n      }, 500);\n    } else {\n      clearInterval(loadingIntervalRef.current);\n      setLoadingMessage(\"Your response is coming\");\n    }\n    return () => clearInterval(loadingIntervalRef.current);\n  }, [loading]);\n  const handleSubmit = async () => {\n    if (!query.trim()) return;\n    setLoading(true);\n    setResponse(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await res.json();\n      setResponse(data.answer);\n    } catch (error) {\n      setResponse(\"Error: Could not fetch response.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Repello AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"query-box\",\n      placeholder: \"Ask me anything...\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      rows: 4,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-button\",\n      onClick: handleSubmit,\n      disabled: loading,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"response-box\",\n      children: loading ? loadingMessage : response || \"Your answer will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fSy0WdR95DIa7A6Pe6VEqfSFB5k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","query","setQuery","response","setResponse","loading","setLoading","loadingMessage","setLoadingMessage","loadingIntervalRef","dots","current","setInterval","repeat","clearInterval","handleSubmit","trim","res","fetch","method","headers","body","JSON","stringify","data","json","answer","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/johns/OneDrive/Desktop/repello_ai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(\"Your response is coming\");\n\n  const loadingIntervalRef = useRef(null);\n\n  useEffect(() => {\n    if (loading) {\n      let dots = 0;\n      loadingIntervalRef.current = setInterval(() => {\n        dots = (dots + 1) % 4; // cycles 0..3 dots\n        setLoadingMessage(\"Your response is coming\" + \".\".repeat(dots));\n      }, 500);\n    } else {\n      clearInterval(loadingIntervalRef.current);\n      setLoadingMessage(\"Your response is coming\");\n    }\n\n    return () => clearInterval(loadingIntervalRef.current);\n  }, [loading]);\n\n  const handleSubmit = async () => {\n    if (!query.trim()) return;\n\n    setLoading(true);\n    setResponse(\"\");\n\n    try {\n      const res = await fetch(\"http://localhost:5000/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query }),\n      });\n\n      const data = await res.json();\n      setResponse(data.answer);\n    } catch (error) {\n      setResponse(\"Error: Could not fetch response.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"header\">Repello AI</h1>\n      <textarea\n        className=\"query-box\"\n        placeholder=\"Ask me anything...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        rows={4}\n        disabled={loading}\n      />\n      <button className=\"generate-button\" onClick={handleSubmit} disabled={loading}>\n        Generate\n      </button>\n      <pre className=\"response-box\">\n        {loading ? loadingMessage : response || \"Your answer will appear here.\"}\n      </pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}